{"remainingRequest":"/home/renu/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/renu/admin/node_modules/ngx-webstorage/dist/app.js","dependencies":[{"path":"/home/renu/admin/node_modules/ngx-webstorage/dist/app.js","mtime":1512224935000},{"path":"/home/renu/admin/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/renu/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Inject, InjectionToken, NgModule, NgZone, Optional } from '@angular/core';\nimport { STORAGE } from './enums/storage';\nimport { LocalStorageService, SessionStorageService } from './services/index';\nimport { WebStorageHelper } from './helpers/webStorage';\nimport { WebstorageConfig } from './interfaces/config';\nimport { KeyStorageHelper } from './helpers/keyStorage';\nimport { StorageObserverHelper } from './helpers/storageObserver';\nexport * from './interfaces/index';\nexport * from './decorators/index';\nexport * from './services/index';\nexport var WEBSTORAGE_CONFIG = new InjectionToken('WEBSTORAGE_CONFIG');\nvar Ng2Webstorage = /*@__PURE__*/ (function () {\n    function Ng2Webstorage(ngZone, config) {\n        this.ngZone = ngZone;\n        if (config) {\n            KeyStorageHelper.setStorageKeyPrefix(config.prefix);\n            KeyStorageHelper.setStorageKeySeparator(config.separator);\n            KeyStorageHelper.setCaseSensitivity(config.caseSensitive);\n        }\n        this.initStorageListener();\n        StorageObserverHelper.initStorage();\n    }\n    Ng2Webstorage.forRoot = function (config) {\n        return {\n            ngModule: Ng2Webstorage,\n            providers: [\n                {\n                    provide: WEBSTORAGE_CONFIG,\n                    useValue: config\n                },\n                {\n                    provide: WebstorageConfig,\n                    useFactory: provideConfig,\n                    deps: [\n                        WEBSTORAGE_CONFIG\n                    ]\n                }\n            ]\n        };\n    };\n    Ng2Webstorage.prototype.initStorageListener = function () {\n        var _this = this;\n        if (typeof window !== 'undefined') {\n            window.addEventListener('storage', function (event) {\n                return _this.ngZone.run(function () {\n                    var storage = window.sessionStorage === event.storageArea ? STORAGE.session : STORAGE.local;\n                    if (event.key === null)\n                        WebStorageHelper.refreshAll(storage);\n                    else\n                        WebStorageHelper.refresh(storage, event.key);\n                });\n            });\n        }\n    };\n    return Ng2Webstorage;\n}());\nexport { Ng2Webstorage };\nexport function provideConfig(config) {\n    return new WebstorageConfig(config);\n}\n//# sourceMappingURL=app.js.map \n",null]}