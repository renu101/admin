{"remainingRequest":"/home/renu/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/renu/admin/node_modules/perfect-scrollbar/src/js/plugin/update-scroll.js","dependencies":[{"path":"/home/renu/admin/node_modules/perfect-scrollbar/src/js/plugin/update-scroll.js","mtime":1503989939000},{"path":"/home/renu/admin/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/home/renu/admin/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["'use strict';\n\nvar instances = require('./instances');\n\nvar createDOMEvent = function (name) {\n  var event = document.createEvent(\"Event\");\n  event.initEvent(name, true, true);\n  return event;\n};\n\nmodule.exports = function (element, axis, value) {\n  if (typeof element === 'undefined') {\n    throw 'You must provide an element to the update-scroll function';\n  }\n\n  if (typeof axis === 'undefined') {\n    throw 'You must provide an axis to the update-scroll function';\n  }\n\n  if (typeof value === 'undefined') {\n    throw 'You must provide a value to the update-scroll function';\n  }\n\n  if (axis === 'top' && value <= 0) {\n    element.scrollTop = value = 0; // don't allow negative scroll\n    element.dispatchEvent(createDOMEvent('ps-y-reach-start'));\n  }\n\n  if (axis === 'left' && value <= 0) {\n    element.scrollLeft = value = 0; // don't allow negative scroll\n    element.dispatchEvent(createDOMEvent('ps-x-reach-start'));\n  }\n\n  var i = instances.get(element);\n\n  if (axis === 'top' && value >= i.contentHeight - i.containerHeight) {\n    // don't allow scroll past container\n    value = i.contentHeight - i.containerHeight;\n    if (value - element.scrollTop <= 2) {\n      // mitigates rounding errors on non-subpixel scroll values\n      value = element.scrollTop;\n    } else {\n      element.scrollTop = value;\n    }\n    element.dispatchEvent(createDOMEvent('ps-y-reach-end'));\n  }\n\n  if (axis === 'left' && value >= i.contentWidth - i.containerWidth) {\n    // don't allow scroll past container\n    value = i.contentWidth - i.containerWidth;\n    if (value - element.scrollLeft <= 2) {\n      // mitigates rounding errors on non-subpixel scroll values\n      value = element.scrollLeft;\n    } else {\n      element.scrollLeft = value;\n    }\n    element.dispatchEvent(createDOMEvent('ps-x-reach-end'));\n  }\n\n  if (i.lastTop === undefined) {\n    i.lastTop = element.scrollTop;\n  }\n\n  if (i.lastLeft === undefined) {\n    i.lastLeft = element.scrollLeft;\n  }\n\n  if (axis === 'top' && value < i.lastTop) {\n    element.dispatchEvent(createDOMEvent('ps-scroll-up'));\n  }\n\n  if (axis === 'top' && value > i.lastTop) {\n    element.dispatchEvent(createDOMEvent('ps-scroll-down'));\n  }\n\n  if (axis === 'left' && value < i.lastLeft) {\n    element.dispatchEvent(createDOMEvent('ps-scroll-left'));\n  }\n\n  if (axis === 'left' && value > i.lastLeft) {\n    element.dispatchEvent(createDOMEvent('ps-scroll-right'));\n  }\n\n  if (axis === 'top' && value !== i.lastTop) {\n    element.scrollTop = i.lastTop = value;\n    element.dispatchEvent(createDOMEvent('ps-scroll-y'));\n  }\n\n  if (axis === 'left' && value !== i.lastLeft) {\n    element.scrollLeft = i.lastLeft = value;\n    element.dispatchEvent(createDOMEvent('ps-scroll-x'));\n  }\n\n};\n",null]}